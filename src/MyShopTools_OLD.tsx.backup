import { useState, useEffect } from 'react'
import { ArrowLeft, Package, MapPin, DollarSign, Hash, Calendar, ExternalLink, Building, Tag } from 'lucide-react'

// Define the Tool type based on the expected structure from MySQL database
type Tool = {
  id?: number // MySQL auto-increment ID
  item_id: number
  product_name: string
  company?: string
  sku?: string
  tags?: string
  price: number
  qty?: number
  purchased?: string
  order_number?: number
  barcode?: string
  location?: string
  sub_location?: string
  order_date?: number
  product_detail?: string
  notes?: string
  html_link?: string
  full_url?: string
  base_url?: string
  sku_on_website?: string
  spare2?: string
}

interface MyShopToolsProps {
  onNavigateBack: () => void
}

export default function MyShopTools({ onNavigateBack }: MyShopToolsProps) {
  const [tools, setTools] = useState<Tool[]>([])
  const [selectedTool, setSelectedTool] = useState<Tool | null>(null)
  const [searchTerm, setSearchTerm] = useState('')
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState<string | null>(null)

  useEffect(() => {
    // Fetch tools from API
    const fetchTools = async () => {
      try {
        setLoading(true)
        const response = await fetch('http://localhost:3001/api/inventory')
        
        if (!response.ok) {
          throw new Error(`Failed to fetch inventory: ${response.statusText}`)
        }
        
        const data = await response.json()
        setTools(data)
        
        if (data.length > 0) {
          setSelectedTool(data[0])
        }
        setError(null)
      } catch (err) {
        console.error('Error fetching inventory:', err)
        setError(err instanceof Error ? err.message : 'Failed to load inventory')
      } finally {
        setLoading(false)
      }
    }

    fetchTools()
  }, [])

  const filteredTools = tools.filter(tool =>
    tool.product_name?.toLowerCase().includes(searchTerm.toLowerCase()) ||
    tool.company?.toLowerCase().includes(searchTerm.toLowerCase()) ||
    String(tool.sku)?.toLowerCase().includes(searchTerm.toLowerCase()) ||
    tool.tags?.toLowerCase().includes(searchTerm.toLowerCase())
  )

  const formatDate = (dateNumber: number) => {
    if (!dateNumber || dateNumber === 0) return 'N/A'
    // Convert Excel date number to JavaScript date
    const date = new Date((dateNumber - 25569) * 86400 * 1000)
    return date.toLocaleDateString()
  }

  const formatPrice = (price: number) => {
    return new Intl.NumberFormat('en-US', {
      style: 'currency',
      currency: 'USD'
    }).format(price)
  }

  return (
    <div className="shop-tools-container">
      {/* Header */}
      <div className="shop-header">
        <button
          onClick={onNavigateBack}
          className="back-button"
        >
          <ArrowLeft className="w-4 h-4" />
          Back to Chat
        </button>
        <div className="header-title">
          <Package className="w-6 h-6" />
          <h1>My Shop Tools</h1>
        </div>
        <div className="tools-count">
          {loading ? 'Loading...' : `${filteredTools.length} tools`}
        </div>
      </div>

      {error && (
        <div className="error-message" style={{ padding: '1rem', margin: '1rem', background: '#fee', color: '#c00', borderRadius: '0.5rem' }}>
          Error: {error}
        </div>
      )}

      <div className="shop-content">
        {/* Left Panel - Tool List */}
        <div className="tools-list-panel">
          <div className="search-section">
            <input
              type="text"
              placeholder="Search tools..."
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
              className="search-input"
            />
          </div>
          
          <div className="tools-list">
            {filteredTools.map((tool) => (
              <div
                key={tool.item_id}
                className={`tool-item ${selectedTool?.item_id === tool.item_id ? 'selected' : ''}`}
                onClick={() => setSelectedTool(tool)}
              >
                <div className="tool-name">{tool.product_name}</div>
                <div className="tool-meta">
                  <span className="tool-company">{tool.company}</span>
                  <span className="tool-price">{formatPrice(tool.price)}</span>
                </div>
                <div className="tool-sku">SKU: {tool.sku}</div>
              </div>
            ))}
          </div>
        </div>

        {/* Right Panel - Tool Details */}
        <div className="tool-details-panel">
          {selectedTool ? (
            <div className="tool-details">
              <div className="details-header">
                <h2>{selectedTool.product_name}</h2>
                <div className="item-id">ID: {selectedTool.item_id}</div>
              </div>

              <div className="details-grid">
                <div className="detail-section">
                  <div className="section-title">
                    <Building className="w-4 h-4" />
                    Company Information
                  </div>
                  <div className="detail-item">
                    <span className="label">Company:</span>
                    <span className="value">{selectedTool.company || 'N/A'}</span>
                  </div>
                  <div className="detail-item">
                    <span className="label">Purchased From:</span>
                    <span className="value">{selectedTool.purchased || 'N/A'}</span>
                  </div>
                </div>

                <div className="detail-section">
                  <div className="section-title">
                    <DollarSign className="w-4 h-4" />
                    Pricing & Inventory
                  </div>
                  <div className="detail-item">
                    <span className="label">Price:</span>
                    <span className="value price">{formatPrice(selectedTool.price)}</span>
                  </div>
                  <div className="detail-item">
                    <span className="label">Quantity:</span>
                    <span className="value">{selectedTool.qty}</span>
                  </div>
                </div>

                <div className="detail-section">
                  <div className="section-title">
                    <Hash className="w-4 h-4" />
                    Product Codes
                  </div>
                  <div className="detail-item">
                    <span className="label">SKU:</span>
                    <span className="value">{selectedTool.sku || 'N/A'}</span>
                  </div>
                  <div className="detail-item">
                    <span className="label">Order Number:</span>
                    <span className="value">{selectedTool.order_number || 'N/A'}</span>
                  </div>
                  <div className="detail-item">
                    <span className="label">Barcode:</span>
                    <span className="value">{selectedTool.barcode || 'N/A'}</span>
                  </div>
                </div>

                <div className="detail-section">
                  <div className="section-title">
                    <MapPin className="w-4 h-4" />
                    Location
                  </div>
                  <div className="detail-item">
                    <span className="label">Location:</span>
                    <span className="value">{selectedTool.location || 'N/A'}</span>
                  </div>
                  <div className="detail-item">
                    <span className="label">Sub Location:</span>
                    <span className="value">{selectedTool.sub_location || 'N/A'}</span>
                  </div>
                </div>

                <div className="detail-section">
                  <div className="section-title">
                    <Calendar className="w-4 h-4" />
                    Order Information
                  </div>
                  <div className="detail-item">
                    <span className="label">Order Date:</span>
                    <span className="value">{selectedTool.order_date ? formatDate(selectedTool.order_date) : 'N/A'}</span>
                  </div>
                </div>

                <div className="detail-section">
                  <div className="section-title">
                    <Tag className="w-4 h-4" />
                    Additional Info
                  </div>
                  <div className="detail-item">
                    <span className="label">Tags:</span>
                    <span className="value">{selectedTool.tags || 'N/A'}</span>
                  </div>
                  <div className="detail-item">
                    <span className="label">Product Detail:</span>
                    <span className="value">{selectedTool.product_detail || 'N/A'}</span>
                  </div>
                  <div className="detail-item">
                    <span className="label">Notes:</span>
                    <span className="value">{selectedTool.notes || 'N/A'}</span>
                  </div>
                </div>

                {selectedTool.html_link && (
                  <div className="detail-section">
                    <div className="section-title">
                      <ExternalLink className="w-4 h-4" />
                      External Links
                    </div>
                    <div className="detail-item">
                      <a
                        href={selectedTool.html_link}
                        target="_blank"
                        rel="noopener noreferrer"
                        className="external-link"
                      >
                        <ExternalLink className="w-4 h-4" />
                        View on Website
                      </a>
                    </div>
                  </div>
                )}
              </div>
            </div>
          ) : (
            <div className="no-selection">
              <Package className="w-12 h-12" />
              <p>Select a tool from the list to view details</p>
            </div>
          )}
        </div>
      </div>
    </div>
  )
}